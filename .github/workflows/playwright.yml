name: Foden Enterprise Playwright TypeScript Framework

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  e2e_tests_in_dev:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright E2E Tests
        run: npm run test_dev_hl
      - name: Generate Allure Results
        run: |
          npx playwright test --reporter=line
          npx allure generate allure-results --clean -o allure-report
        working-directory: ./tests
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-report
          retention-days: 30
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          keep_files: true
      - name: Clean Up Old Builds
        run: |
          builds=$(ls ./gh-pages | grep 'build-' | sort -V)
          old_builds=$(echo "$builds" | head -n -10)
          for build in $old_builds; do
            echo "Removing old build: $build"
            rm -rf "./gh-pages/$build"
          done

  api_tests_in_dev:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright API Tests
        run: npm run test_api
      - name: Generate Allure Results
        run: |
          npx playwright test --reporter=line
          npx allure generate allure-results --clean -o allure-report
        working-directory: ./tests
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-report
          retention-days: 30
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          keep_files: true
      - name: Clean Up Old Builds
        run: |
          builds=$(ls ./gh-pages | grep 'build-' | sort -V)
          old_builds=$(echo "$builds" | head -n -10)
          for build in $old_builds; do
            echo "Removing old build: $build"
            rm -rf "./gh-pages/$build"
          done