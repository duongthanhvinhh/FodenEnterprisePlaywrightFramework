name: Foden Automation Solutions

concurrency:
  group: gh-pages-deployment-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  e2e_tests_in_dev:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}    
    permissions:
      contents: write

    steps:
      - name: Print secret (⚠️ be careful!)
        run: echo "${{ secrets.MY_SECRET }}"

      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Cache Playwright dependencies and browsers
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
            node_modules
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: 🌐 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run e2e tests
        run: npm run test_dev_hl

      - name: 🛠 Generate E2E Allure report
        if: always()
        run: |
          npx allure generate ./allure-results --clean -o ./allure-report-e2e
          mkdir -p ./gh-pages/build-${{ github.run_number }}/e2e
          cp -r ./allure-report-e2e/* ./gh-pages/build-${{ github.run_number }}/e2e/

      - name: 📤 Upload E2E report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-e2e
          path: ./allure-report-e2e
          retention-days: 30

  api_tests_in_dev:
    needs: e2e_tests_in_dev
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}    
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Cache Playwright dependencies and browsers
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
            node_modules
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: 🌐 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run api tests
        run: npm run test_api

      - name: 🛠 Generate API Allure report
        if: always()
        run: |
          npx allure generate ./allure-results --clean -o ./allure-report-api
          mkdir -p ./gh-pages/build-${{ github.run_number }}/api
          cp -r ./allure-report-api/* ./gh-pages/build-${{ github.run_number }}/api/

      - name: 📥 Download E2E report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-e2e
          path: ./gh-pages/build-${{ github.run_number }}/e2e

      - name: 🧹 Clean up old builds
        run: |
          builds=$(ls ./gh-pages | grep 'build-' | sort -V)
          old_builds=$(echo "$builds" | head -n -10)
          for build in $old_builds; do
            echo "Removing old build: $build"
            rm -rf "./gh-pages/$build"
          done

      - name: 📎 Add summary links to GitHub UI
        if: always()
        run: |
          echo "### Test Reports for Build ${{ github.run_number }} 📊" >> $GITHUB_STEP_SUMMARY
          echo "* 🌐 [E2E Test Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/build-${{ github.run_number }}/e2e/)" >> $GITHUB_STEP_SUMMARY
          echo "* 🔌 [API Test Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/build-${{ github.run_number }}/api/)" >> $GITHUB_STEP_SUMMARY

      - name: 🚀 Deploy reports to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./gh-pages
          keep_files: true

      - name: 📤 Upload API report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-api
          path: ./allure-report-api
          retention-days: 30